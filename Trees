By performing binary lifting,we were able to find kth parent of each node,using this we could find the distance between 2 nodes in a tree
CODE:-
 void dfs(int u, int par, int lvl, vector<int> &levels, vector<vector<int>> &graph, vector<vector<int>> &LCA) {
        levels[u] = lvl;
        LCA[u][0] = par;

        for(auto &v: graph[u]) {
            if(v != par) {
                dfs(v, u, lvl + 1, levels, graph, LCA);
            }
        }
    }

    void init(int n, int maxN, vector<vector<int>> &LCA) {
        for(int i = 1; i <= maxN; i++) {
            for(int j = 0; j < n; j++) {
                if(LCA[j][i - 1] != -1) {
                    int par = LCA[j][i - 1];
                    LCA[j][i] = LCA[par][i - 1];
                }
            }
        }
    }

    int findLCA(int a, int b, int maxN, vector<int> &levels, vector<vector<int>> &LCA) {
        if(levels[a] > levels[b]) swap(a, b);

        int d = levels[b] - levels[a];
        while(d > 0) {
            int jump = log2(d);
            b = LCA[b][jump];
            d -= (1LL << jump);
        }

        if(a == b) return a;

        for(int i = maxN; i >= 0; i--) {
            if(LCA[a][i] != -1 && LCA[a][i] != LCA[b][i]) {
                a = LCA[a][i], b = LCA[b][i];
            }
        }

        return LCA[a][0];
    }

    int getDistance(int u, int v, int maxN, vector<int> &levels, vector<vector<int>> &LCA) {
        int lca = findLCA(u, v, maxN, levels, LCA);
        return levels[u] + levels[v] - 2 * levels[lca];
    }




IF AKSED FOR THE DISTANCE BETWEEN 2 NODES OF A TREE TO BE EVEN-THINK OF BIPARTITE TREE(TREE WITH ADJACENT COLORS DIFFERENT)
